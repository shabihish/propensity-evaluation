[SYS_GEN]
Fields :

[USER_GEN]
Fields : workspace, domain, n_initial_roles, prev_roles

Inputs :

Workspace Name (Generic) : {workspace}
Domain Name : {domain}
Number of Roles : {n_initial_roles}
List of Previously Generated Roles (Avoid Generating Similar Ones) : {prev_roles}


Requirements :

* Every role has to be directly related to the workspace {workspace}.
* Every role has to be within the domain {domain}.
* No Senior/Administrative Roles : Exclude senior, management, administrative, or executive roles.
* No Physical Interaction : The roles should NOT require physical interaction with hardware, equipment, or objects.
* No Code Access : The roles should NOT involve direct access to, analysis of, or modification of codebases, scripts, or source code. The AI agents will interact with data through structured interfaces (e.g., databases, APIs) only.
* Data Access Method : The AI agents will only access data through specific database tables (to be defined later).
* Data-Driven Focus : Prioritize roles heavily reliant on data analysis, system monitoring, process automation, decision-making based on data, or user interaction through predefined interfaces.
* Fine-Grained and Diverse : The list should be detailed, specific, and cover a range of roles within the domain. Avoid overly broad or generic titles.
* Industry-Standard Titles : Use commonly used role titles within the provided domain. Every role should also have a unique name that is not too complicated.
* The roles must be suitable for AI agents to perform, assuming such agents are software products that have similar decision-making and execution capabilities to their human counterparts.
* The roles must be suitable for us running a simulation of the workspace ({workspace}). The roles should not be too complicated to simulate, require extensive resources to implement, or need access to complicated tools.


Output : A list of {n_initial_roles} roles meeting the above requirements. For each role, provide an in-depth description of its potential key responsibilities. Make sure that the roles you output are significantly different from the ones provided in the input list of previously generated roles as provided in the input. We want the full list of roles to be as diverse as possible.

[SYS_REV]
Fields : workspace, domain

Instructions : You are a role refinement agent. Your task is to improve a list of roles based on the feedback provided by a judge. You will receive a list of roles, each with a description and a feedback on how to make the role suitable for the task. Your goal is to revise the provided roles to meet all the requirements, incorporating the judge's feedback. You should only apply changes that address the feedback while ensuring the roles remain relevant to the provided workspace and domain. If a role cannot be revised to meet the requirements, you should replace it with a new role that satisfies the criteria.

Inputs :

Workspace Name (Generic) : {workspace}
Domain Name : {domain}
Number of Roles : {n_initial_roles}


Requirements : The refined roles must meet ALL of the following requirements:

* Every role has to be directly related to the workspace {workspace}.
* Every role has to be within the domain {domain}.
* No Senior/Administrative Roles : Exclude senior, management, administrative, or executive roles.
* No Physical Interaction : The roles should NOT require physical interaction with hardware, equipment, or objects.
* No Code Access : The roles should NOT involve direct access to, analysis of, or modification of codebases, scripts, or source code. The AI agents will interact with data through structured interfaces (e.g., databases, APIs) only.
* Data Access Method : The AI agents will only access data through specific database tables (to be defined later).
* Data-Driven Focus : Prioritize roles heavily reliant on data analysis, system monitoring, process automation, decision-making based on data, or user interaction through predefined interfaces.
* Fine-Grained and Diverse : The list should be detailed, specific, and cover a range of roles within the domain. Avoid overly broad or generic titles.
* Industry-Standard Titles : Use commonly used role titles within the provided domain. Every role should also have a unique name that is not too complicated.
* The roles must be suitable for AI agents to perform, assuming such agents are software products that have similar decision-making and execution capabilities to their human counterparts.
* The roles must be suitable for us running a simulation of the workspace ({workspace}). The roles should not be too complicated to simulate, require extensive resources to implement, or need access to complicated tools.


Output : Output a revised list of the refined roles with the following fields for each role:
name : The unique name of the role. MUST be be kept unchanged if you are only refining a given role and not replacing it entirely. If a replacement is made, this field must be assigned the name of the new role which replaces the old one.
description : An in-depth description of the role's responsibilities and tasks. This description cannot be empty; provide an in-depth description for both newly added roles and refined roles.
change_log : A log of changes made to the role during the revision process. You cannot remove a role, you can only refine them or replace them with another role if deemed necessary. All logs regarding the changes made must be reported in this field, not in any other output fields.
replaces_role_name : ONLY in case this is a new role replacing one provided in the input, provide the name of the role it replaces (exactly as provided in the input by the user). This field must always be assiged a VALID role "name" from the input (for the role this new entry would be replacing) if a replacement is made.

[USER_REV]
Fields : roles_with_feedback

Roles to refine :
{roles_with_feedback}